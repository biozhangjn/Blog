---
title: Gene ID转换
author: Jiannan Zhang
date: '2020-03-13'
slug: gene-id转换
categories:
  - R
tags:
  - R Markdown
  - Academic
  - RNA-seq
subtitle: ''
summary: ''
authors: []
lastmod: '2020-03-13T13:54:04+08:00'
featured: no
image:
  caption: ''
  focal_point: ''
  preview_only: no
projects: []
---

### 为什么要在R中进行ID转换

在转录组数据或者其他分析中，好吧，其实是因为我做的物种是家鸡，根本就没有人和鼠那样有着非常完善和时刻更新的数据库做为支持，我经常会遇见GeneID转换，同源基因转换的问题，之前一直利用`Ensembl`主页里面的`biomart`进行数据下载，然后在excel里面利用vlookup进行操作，哎，费时费力，而且不能高度自动化和重复化~~（传统湿实验室人员的基本操作思维）~~，现在已经开始将大部分操作都在R里面进行了，刚好学习了`biomaRt`包可以完美替代之前的操作流程，下面就是相关笔记及备注：

>好吧，这是第一篇Rmd笔记，Rmarkdown真的超级好用啊！

### 安装所需的软件包

下面的R包也包括Y叔的`clusterProfiler`了，里面也有ID转换的板块，也是非常实用的，一并汇总了。

```
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("biomaRt")
```
### `biomaRt`示例

首先还是推荐看[官方文档](https://www.bioconductor.org/packages/devel/bioc/vignettes/biomaRt/inst/doc/biomaRt.html)，没有什么攻略比官方文档更靠谱了，除非懒~

``` {r, echo=TRUE, message=FALSE}
library("biomaRt")
library(org.Gg.eg.db)
library(org.Hs.eg.db)
library(clusterProfiler)
library(DOSE)

# 查看Marts库
listMarts(host="asia.ensembl.org")
```

### 一步到位代码

选择所需的数据库代码，我需要的是人和家鸡的数据库，直接定义到`dataset`即可，有时网速很慢，添加了对应地区的`host`。

``` {r, echo=TRUE, message=FALSE}
# 定义人对应数据mart
human = useMart("ensembl",dataset="hsapiens_gene_ensembl",host="asia.ensembl.org")

# 定义家鸡对应数据mart
chicken = useMart("ensembl",dataset="ggallus_gene_ensembl",host="asia.ensembl.org")

# 查看对应`attributes`说明
listAttributes(chicken)[1:40,]

listAttributes(human)[1:10,]

# 进行ID转换

hgnc_swissprot <- getBM(attributes=c('ensembl_gene_id','ensembl_transcript_id','hgnc_symbol','uniprotswissprot'),filters = 'ensembl_gene_id', values = 'ENSG00000139618', mart = human)

hgnc_swissprot
```
### 同源基因ID转换代码

跨物种同源基因转换使用`getLDS`命令即可，也是非常方便，但是有一个问题就是家鸡一个基因可能对应多个人的基因，系统会自动添加对应的旁系同源基因，所以转换后的数据使用需要小心，可能需要人工排查一下，或者人为的去掉部分数据。

``` {r, echo=TRUE, message=FALSE}
#human = useMart("ensembl",dataset="hsapiens_gene_ensembl",host="asia.ensembl.org")
#chicken = useMart("ensembl",dataset="ggallus_gene_ensembl",host="asia.ensembl.org")

genelist_megre <- c("ENSGALG00000001136","ENSGALG00000005956","ENSGALG00000006407","ENSGALG00000007728","ENSGALG00000009628","ENSGALG00000010316","ENSGALG00000011190","ENSGALG00000011687","ENSGALG00000011806","ENSGALG00000015656")

genelist_megre

genelist_megre_Hs <- getLDS(attributes = c("ensembl_gene_id","entrezgene_id", "external_gene_name"),      
                            filters = "ensembl_gene_id", 
                            values = genelist_megre, 
                            mart = chicken,
                            attributesL = c("ensembl_gene_id","entrezgene_id","external_gene_name"), 
                            martL = human)

genelist_megre_Hs
```
>插一句，总算知道为什么R代码有规范了，参数主动换行，真的好看太多了。

### 提取蛋白/DNA序列并导出FASTA格式文件

使用过程中发现居然还可以调取序列等信息，少量操作也就不用打开网页，快速方便完成氨基酸/核酸序列的获取，非常实用！

``` {r, echo=TRUE, message=FALSE}
protein = getSequence(id=c("GRP"),
                      type="external_gene_name",
                      seqType="peptide", 
                      mart= chicken)

protein
```

``` {r, echo=FALSE, message=FALSE}
#同时也能输出FASTA文件到本地
# exportFASTA(protein,file="./test.fasta")

# type支持多种类型
# The type of identifier used. Supported types are hugo, ensembl, embl, entrezgene, refseq, ensemblTrans and unigene. Alternatively one can also use a filter to specify the type. Possible filters are given by the listFilters function

# seqType同样支持多种需求
# Type of sequence that you want to retrieve. Allowed seqTypes are: cdna, peptide, 3utr, 5utr, genomic
```

### 混杂基因名称转换处理，这里使用了`bitr`进行示例

在获得基因列表是不可避免会出现name和ID混杂在一起的情况，目前只能采用分批操作的流程进行处理，有更好方法再更新。

``` {r, echo=TRUE, message=FALSE}
genelist <- c("S100A6","S100A10","SNCG","S100A1","S100A11","ID3","ENSGALG00000011190","AKR1B10","CSRP1","SPARCL1","HBEGF","FAM107B","ENSGALG00000009628","ENSGALG00000010316","ENSGALG00000011190","ENSGALG00000011687","ENSGALG00000011806","ENSGALG00000015656")

genelist

# 定义ENSEMBL命名的基因
index <- grep("ENSGALG", genelist)

index
# 筛选ENSGALG命名的基因并转换
genelistA <- genelist[index]
geneA = bitr(genelistA, fromType="ENSEMBL", toType=c("SYMBOL", "ENTREZID"), OrgDb="org.Gg.eg.db")
head(geneA)

# 筛选SYMBOL命名的基因并转换
genelistB <- genelist[-index]
geneB = bitr(genelistB, fromType="SYMBOL", toType=c("ENSEMBL", "ENTREZID"), OrgDb="org.Gg.eg.db")
head(geneB)

gene <- rbind(geneA,geneB)

gene
summary(gene)
# 同时可以导出到本地csv文件
#write.csv(as.data.frame(gene),"./gene.csv",row.names =FALSE)
```

### 当然，使用`getBM`也可以实现ID转换，但是结果会出现不少信息残缺，还是推荐`bitr`

``` {r, echo=TRUE, message=FALSE}
gene_A <- getBM(attributes=c("ensembl_gene_id", "external_gene_name", "entrezgene_id"),
                filters = 'ensembl_gene_id', 
                values = genelistA, 
                mart = chicken)

gene_B <- getBM(attributes=c("ensembl_gene_id", "external_gene_name", "entrezgene_id"),
                filters = 'external_gene_name', 
                values = genelistB, 
                mart = chicken)

gene_ABmegre <- rbind(gene_A,gene_B)
gene_ABmegre
summary(gene_ABmegre)
```

### 小结

学习使人懒惰，以前要花半小时进行EXCEL文件准备和ID转换，现在也就几分钟，成功偷懒~~

### ~~参考资料~~
